{% extends 'base.html.twig' %}

{% block body %}
    <div class="container">
        <div class="section">
            <h1 class="title">Търсене</h1>

            {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'class': 'search-form'}}) }}

                <div class="columns">
                    <div class="column is-one-quarter">
                        <div class="itemType">
                            <label class="label">Тип на обекта</label>
                            <div class="control has-icons-left">
                                <div class="select">
                                    {{ form_widget(form.element, {'id': 'select-element-form'}) }}
                                </div>
                                <span class="icon is-small is-left"><i class="fas fa-building"></i></span>
                            </div>
                            <a class="button is-warning mtb10"
                               id="submit-button"
                               onclick="searchObjects()">Търси</a>
                        </div>
                    </div>
                </div>

                <div id="search-map" style="width: 100%; height: calc(100vh - 400px)"></div>

            {{ form_end(form) }}
        </div>
    </div>





    <div class="container">

        <div class="section" style="padding-top: 0 !important; padding-bottom: 0 !important;">
            {% if submitted and result is empty %}
                <div class="notification">
                    Няма намерени резултати
                </div>
            {% endif %}

            {% for item in result %}
                <div class="thumb">
                    <div style="display: flex;">
                        <a href="{{ path('app.photo', {'uuid': item.item.uuid}) }}">
                            <img src="/media/{{ item.item.file }}" alt="" />
                            {% for mark in item.marks %}
                            {% if mark.element.id == searchedElement.id %}
                            <div class="rect passive-rect rect-type-{{ mark.element.id }}" style="display: block;top: {{ mark.position.top }}%; left: {{ mark.position.left }}%; width: {{ mark.position.width }}%; height: {{ mark.position.height }}%; border-color: {{ mark.element.color }}"></div>
                            {% endif %}
                            {% endfor %}
                        </a>
                    </div>
                </div>
            {% endfor %}
        </div>

    </div>


    <script>
        var blueIcon = new L.Icon({
            iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });
        function goToMarker(markerId) {
            window.location.href = '/marker/' + markerId;
        }
        function createMarker(position, markerId) {
            // marker ias actibe by default on create
            var marker = new L.marker(position, {
                icon: blueIcon,
                draggable: 'false'
            });
            marker.on('dragend', function(event) {
                onDrag(marker);
            });
            if (markerId) {
                marker.on('click', function(event) {
                    goToMarker(markerId);
                });
            }
            map.addLayer(marker);
            return marker;
        }
        var geoJSON;
        var markers = {};
        var map;
        function mapInit(coordinates) {
            var map = L.map('search-map').setView(coordinates, 13);
            L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
                maxZoom: 18,
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
                    '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                    'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                id: 'mapbox.streets'
            }).addTo(map);
            return map;
        }
        function searchObjects() {
            let valid = true;
            let elementVal = $('.search-form .itemType select').val();
            if (!elementVal) {
                $('.search-form .itemType .select').addClass('is-danger');
                valid = false;
            }
            if (valid) {
                loadObjects(elementVal);
            }
            return;
        }
        function loadObjects(elementVal) {
            if (map) {
                map.remove();
            }
            $.ajax({
                url: '/api/map?element=' + elementVal,
                type: 'GET',
                success: geojsonFeatures => {
                    geoJSON = geojsonFeatures;
                    map = mapInit(geojsonFeatures[0].geometry.coordinates.reverse());
                    createMarkersFromGeoJSON();
                }
            });
        }
        function createMarkersFromGeoJSON() {
            markers = [];
            geoJSON.forEach(feature => {
                var markerId = feature.properties.id;
                markers[markerId] = createMarker(feature.geometry.coordinates, markerId);
            });
        }
    </script>

{% endblock %}
